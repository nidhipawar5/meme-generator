{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\growthSchool\\\\memegenerator\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Gallery from \"./Gallery\";\nimport TempGen from \"./TempGen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      images: [],\n      selected: null,\n      selectedImg: []\n    };\n\n    this.handleImgClick = e => {\n      this.setState({\n        selectedImg: this.state.images.find(i => i.id === e.target.id)\n      });\n      this.toggleSelected();\n    };\n\n    this.chooseRandom = () => {\n      this.setState({\n        selected: true,\n        selectedImg: this.state.images[Math.floor(Math.random() * this.state.images.length)]\n      });\n    };\n\n    this.toggleComponent = () => {\n      if (this.state.selected) {\n        return /*#__PURE__*/_jsxDEV(TempGen, {\n          meme: this.state.selectedImg,\n          toggleSelected: this.toggleSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Gallery, {\n          handleRandom: this.chooseRandom,\n          images: this.state.images,\n          handleclick: this.handleImgClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.toggleSelected = () => {\n      this.setState({\n        selected: !this.state.selected\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.toggleComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(r => r.json()).then(images => {\n      this.setState({\n        images: images.data.memes.filter(i => i.box_count === 2)\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Home/Desktop/growthSchool/memegenerator/src/App.js"],"names":["React","Component","Gallery","TempGen","App","state","images","selected","selectedImg","handleImgClick","e","setState","find","i","id","target","toggleSelected","chooseRandom","Math","floor","random","length","toggleComponent","render","componentDidMount","fetch","then","r","json","data","memes","filter","box_count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCI,KADyC,GACjC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,WAAW,EAAE;AAHP,KADiC;;AAAA,SAOzCC,cAPyC,GAOvBC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,MAAX,CAAkBM,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,CAAC,CAACK,MAAF,CAASD,EAA9C;AADD,OAAd;AAGA,WAAKE,cAAL;AACD,KAZwC;;AAAA,SAczCC,YAdyC,GAc1B,MAAM;AACnB,WAAKN,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,MAAX,CAAkBY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,MAA7C,CAAlB;AAA/B,OAAd;AACD,KAhBwC;;AAAA,SAkBzCC,eAlByC,GAkBvB,MAAM;AACtB,UAAI,KAAKjB,KAAL,CAAWE,QAAf,EAAyB;AACvB,4BAAO,QAAC,OAAD;AAAS,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,WAA1B;AAAuC,UAAA,cAAc,EAAE,KAAKQ;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE,QAAC,OAAD;AACE,UAAA,YAAY,EAAE,KAAKC,YADrB;AAEE,UAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWC,MAFrB;AAGE,UAAA,WAAW,EAAE,KAAKG;AAHpB;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD;AACF,KA9BwC;;AAAA,SAsCzCO,cAtCyC,GAsCxB,MAAM;AACrB,WAAKL,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAAxB,OAAd;AACD,KAxCwC;AAAA;;AAgCzCgB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBACJ,KAAKD,eAAL;AADI;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAMDE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESpB,MAAD,IAAY;AAChB,WAAKK,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEA,MAAM,CAACuB,IAAP,CAAYC,KAAZ,CAAkBC,MAAlB,CAA0BlB,CAAD,IAAOA,CAAC,CAACmB,SAAF,KAAgB,CAAhD;AAAV,OAAd;AACD,KAJH;AAKD;;AAhDwC","sourcesContent":["import React, { Component } from \"react\";\r\nimport Gallery from \"./Gallery\";\r\nimport TempGen from \"./TempGen\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    selected: null,\r\n    selectedImg: [],\r\n  };\r\n\r\n  handleImgClick = (e) => {\r\n    this.setState({\r\n      selectedImg: this.state.images.find(i => i.id === e.target.id),\r\n    });\r\n    this.toggleSelected()\r\n  };\r\n\r\n  chooseRandom = () => {\r\n    this.setState({ selected: true, selectedImg: this.state.images[Math.floor(Math.random() * this.state.images.length)] })\r\n  }\r\n\r\n  toggleComponent = () => {\r\n    if (this.state.selected) {\r\n      return <TempGen meme={this.state.selectedImg} toggleSelected={this.toggleSelected} />;\r\n    } else {\r\n      return (\r\n        <Gallery\r\n          handleRandom={this.chooseRandom}\r\n          images={this.state.images}\r\n          handleclick={this.handleImgClick}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div>\r\n      {this.toggleComponent()}\r\n    </div>;\r\n  }\r\n\r\n  toggleSelected = () => {\r\n    this.setState({ selected: !this.state.selected })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((r) => r.json())\r\n      .then((images) => {\r\n        this.setState({ images: images.data.memes.filter((i) => i.box_count === 2) });\r\n      });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}